### Configurations from config server
discovery-service-user:
  server:
    hostname: localhost
    port: 8010
#
postgres-user:
  server:
    url: 192.168.0.125
    port: 3434
    database: task_db
  credentials:
    username: postgres
    password: Fjeoqi38B3Nio83ndNehH328
#
kafka-user:
  bootstrap-servers: 192.168.0.125:29092,192.168.0.125:39092,192.168.0.125:49092

###


spring:
  application:
    name: workspace-manager-rs
  config:
    import: optional:configserver:http://${CONFIG_SERVER_USER}:${CONFIG_SERVER_PASSWORD}@${CONFIG_SERVER_HOST:localhost}:${CONFIG_SERVER_PORT:8012}

  liquibase:
    url: jdbc:postgresql://${postgres-user.server.url}:${postgres-user.server.port}/${postgres-user.server.database}
    user: ${postgres-user.credentials.username}
    password: ${postgres-user.credentials.password}
    driver-class-name: org.postgresql.Driver

  kafka:
    bootstrap-servers: ${kafka-user.bootstrap-servers}
    producer:
      key-serializer: org.apache.kafka.common.serialization.UUIDSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
      properties:
        enable.idempotence: true

  r2dbc:
    url: r2dbc:postgresql://${postgres-user.server.url}:${postgres-user.server.port}/${postgres-user.server.database}
    username: ${postgres-user.credentials.username}
    password: ${postgres-user.credentials.password}
    pool:
      initial-size: 2
      max-size: 10
      max-acquire-time: 15s



server.port: ${PORT:8080}

eureka:
  client:
    service-url:
      defaultZone: http://${discovery-service-user.server.hostname}:${discovery-service-user.server.port}/eureka
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}


management:
  metrics:
    tags:
      application: ${spring.application.name}:${spring.application.instance_id}
  endpoint:
    metrics:
      access: read_only
    prometheus:
      access: read_only
  endpoints:
    web:
      exposure:
        include: prometheus, metrics